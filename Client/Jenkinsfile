pipeline
{
    agent any
    tools
    {
        nodejs 'NODE_LTS'
    }

    stages
    {
        stage('Preparation') 
        {
            steps
            {
                // Obtiene el código del server git
                git credentialsId: 'Git', url: 'https://masterdev@git.willdelavega.com/DigitalMechanic/Client'
            }

        }

        stage('Build') 
        {
            steps
            {
                // Instala los paquetes de Node
                sh 'npm update'
            }

        }

        stage('Test')
        {
            steps
            {
                // Borra la versión de desarrollo de karma.conf
                sh 'rm -f karma.conf.js'
                
                // Activa la versión de CI de karma.conf
                sh 'mv karma.conf.ci.js karma.conf.js'

                // Se Asegura de que el folder tenga permisos para que JUNIT pueda escribir
                sh 'sudo chmod -R 777 .'

                // Inicia el Test
                sh 'karma start karma.conf'
            }

        }

        stage('Package') 
        {
            steps
            {
                // Compilación
                sh 'npm run production'

                // Empaqueta el archivo de Deploy
                sh 'sudo 7za a -wdist -tzip -r deploy.zip ./dist/*'
            }
        }

        stage('Deploy') 
        {
            steps
            {
                // Elimina la instalación anterior del server de staging
                sh 'ssh ci@staging.willdelavega.com "sudo chmod -R 777 /var/www/digitalmechanic"'
                sh 'ssh ci@staging.willdelavega.com "sudo rm -f /var/www/digitalmechanic/*"'

                // Transfiere el paquete de Deploy sobre SCP
                sh 'scp deploy.zip ci@staging.willdelavega.com:/var/www/digitalmechanic'

                // Desempaqueta el paquete de Deploy en el folder de deployment del Server
                sh 'ssh ci@staging.willdelavega.com "sudo 7z x /var/www/digitalmechanic/deploy.zip -o/var/www/digitalmechanic"'

                // Elimina el archivo dzip de Deploy del Workspace local
                sh 'rm -f deploy.zip'

                // Borra el paquete de deployment (zip) del server
                sh 'ssh ci@staging.willdelavega.com "sudo rm /var/www/digitalmechanic/deploy.zip"'

                // Le da la posesión del folder de deployment al usuario www-data para qeu apache2 pueda gestionarlo
                sh 'ssh ci@staging.willdelavega.com "sudo chown -R www-data /var/www/digitalmechanic"'

                // Cambia los permisos del folder de deployment en el server a permisos para la app de producción
                sh 'ssh ci@staging.willdelavega.com "sudo chmod -R 775 /var/www/digitalmechanic"'

                // Reinicia el server apache para activar los cambios
                sh 'ssh ci@staging.willdelavega.com "sudo apache2ctl restart"'
            }

        }

        stage('Clean')
        {
            steps
            {
                cleanWs cleanWhenSuccess: true
            }
        }
    }
}